version: "3.7"
volumes:
  postgres:
  redis:
networks:
  secateur:
services:
  app:
    build: .
    image: secateur
    env_file:
      - .env
    command: sh -c "./manage.py migrate && gunicorn -b 0.0.0.0:5000 -k gthread --log-file=- --log-level info --access-logfile - --capture-output secateur.wsgi"
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - postgres
    networks:
      secateur:
    init: true
    read_only: true
    tmpfs:
      - /tmp
    restart: always
  celery:
    build: .
    image: secateur
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=secateur.settings
    command: celery -A secateur worker -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler --beat --autoscale 4,1
    depends_on:
      - redis
      - postgres
    networks:
      secateur:
    init: true
    read_only: true
    tmpfs:
      - /tmp
    restart: always
  postgres:
    image: postgres:11
    command: postgres -c 'shared_buffers=256MB'
    env_file:
      - ./.env
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      secateur:
    init: true
    read_only: true
    tmpfs:
      - /run/
      - /tmp/
    restart: always
  redis:
    image: redis
    volumes:
      - redis:/data
    networks:
      secateur:
    init: true
    read_only: true
    restart: always
